---
import type { LinkItem, LinkCategory } from "../constants/links";

interface Props {
  links: LinkItem[];
  categories: LinkCategory[];
  profileInfo: {
    name: string;
    avatar: string;
    bio: string;
    location: string;
  };
}

const { links, categories, profileInfo } = Astro.props;

const linksByCategory = categories
  .map((category) => ({
    ...category,
    links: links.filter((link) => link.category === category.name),
  }))
  .filter((category) => category.links.length > 0);
---

<div class="bg-gradient-to-br from-blue-50 via-white to-purple-50 px-4 py-8">
  <div class="mx-auto max-w-2xl">
    <div class="mb-12 text-center">
      <div class="mb-6">
        <img
          src={profileInfo.avatar}
          alt={profileInfo.name}
          class="mx-auto mb-4 h-24 w-24 rounded-full border-4 border-white shadow-lg"
        />
        <h1 class="mb-2 text-3xl font-bold text-gray-900">
          {profileInfo.name}
        </h1>
        <p class="mb-1 text-lg text-gray-600">{profileInfo.bio}</p>
        <p class="flex items-center justify-center gap-1 text-sm text-gray-500">
          <svg
            class="h-4 w-4"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24">
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"
            ></path>
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"
            ></path>
          </svg>
          {profileInfo.location}
        </p>
      </div>
    </div>

    <div class="space-y-8">
      {
        linksByCategory.map((category) => (
          <div class="space-y-4">
            <div class="text-center">
              <h2 class="mb-1 text-xl font-semibold text-gray-800">
                {category.title}
              </h2>
              {category.description && (
                <p class="text-sm text-gray-600">{category.description}</p>
              )}
            </div>

            <div class="space-y-3">
              {category.links.map((link) => (
                <a
                  href={link.url}
                  data-umami-event={`Open ${link.title}`}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="group block">
                  <div class="transform rounded-xl border border-gray-100 bg-white p-4 shadow-sm transition-all duration-200 hover:-translate-y-0.5 hover:border-gray-200 hover:shadow-md">
                    <div class="flex items-center space-x-4">
                      {link.icon && (
                        <div
                          class="flex h-12 w-12 items-center justify-center rounded-lg"
                          style={
                            link.color ? `background-color: ${link.color}` : ""
                          }>
                          <img
                            src={`/svg/${link.icon}.svg`}
                            alt={`${link.title} icon`}
                            class="h-6 w-6"
                            style={
                              link.color && !link.icon.includes("favicon")
                                ? `filter: brightness(0) invert(1) opacity(0.95)`
                                : ""
                            }
                          />
                        </div>
                      )}
                      <div class="min-w-0 flex-1">
                        <h3 class="font-semibold text-gray-900 transition-colors group-hover:text-blue-600">
                          {link.title}
                        </h3>
                        {link.description && (
                          <p class="mt-1 line-clamp-2 text-sm text-gray-600">
                            {link.description}
                          </p>
                        )}
                      </div>
                      <div class="text-gray-400 transition-colors group-hover:text-blue-500">
                        <svg
                          class="h-5 w-5"
                          fill="none"
                          stroke="currentColor"
                          viewBox="0 0 24 24">
                          <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            stroke-width="2"
                            d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"
                          />
                        </svg>
                      </div>
                    </div>
                  </div>
                </a>
              ))}
            </div>
          </div>
        ))
      }
    </div>
  </div>
</div>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
